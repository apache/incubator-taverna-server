/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.01.04 at 04:15:49 PM GMT 
//


package org.apache.taverna.server.usagerecord.xml.urf2;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * Open Grid Forum GFD.204 Usage Record type <code>ExecutionHostType</code>
 * 
 * @see <a href="https://www.ogf.org/documents/GFD.204.pdf#subsection.5.5">GFD.204 section 5.5</a>
 *
 */

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ExecutionHostType", propOrder = {
    "hostname",
    "processId",
    "benchmark"
})
public class ExecutionHostType {

    @XmlElement(name = "Hostname", required = true)
    protected HostnameType hostname;
    @XmlElement(name = "ProcessId")
    @XmlSchemaType(name = "positiveInteger")
    protected List<BigInteger> processId;
    @XmlElement(name = "Benchmark")
    protected List<BenchmarkType> benchmark;

    /**
     * Gets the value of the hostname property.
     * 
     * @return
     *     possible object is
     *     {@link HostnameType }
     *     
     */
    public HostnameType getHostname() {
        return hostname;
    }

    /**
     * Sets the value of the hostname property.
     * 
     * @param value
     *     allowed object is
     *     {@link HostnameType }
     *     
     */
    public void setHostname(HostnameType value) {
        this.hostname = value;
    }

    /**
     * Gets the value of the processId property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the processId property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProcessId().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BigInteger }
     * 
     * 
     */
    public List<BigInteger> getProcessId() {
        if (processId == null) {
            processId = new ArrayList<BigInteger>();
        }
        return this.processId;
    }

    /**
     * Gets the value of the benchmark property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the benchmark property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBenchmark().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BenchmarkType }
     * 
     * 
     */
    public List<BenchmarkType> getBenchmark() {
        if (benchmark == null) {
            benchmark = new ArrayList<BenchmarkType>();
        }
        return this.benchmark;
    }

}
